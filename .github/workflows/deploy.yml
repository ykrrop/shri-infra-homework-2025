name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to deploy"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }}_latest

    steps:
      - name: Docker login to Yandex Cloud
        run: |
          echo "${{ secrets.YA_OAUTH }}" \
            | docker login --username oauth --password-stdin cr.yandex

      - name: Check if image exists
        run: |
          docker manifest inspect "$IMAGE" > /dev/null 2>&1 \
            || (echo "Image not found: $IMAGE" && exit 1)

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo "${{ secrets.YA_OAUTH }}" | sudo docker login --username oauth --password-stdin cr.yandex

            sudo docker pull $IMAGE


            sudo docker stop app_container || true
            sudo docker rm app_container   || true

            н
            sudo docker run -d --name app_container $IMAGE

      - name: Find release issue by title
        id: locate_release_issue
        uses: actions/github-script@v7
        env:
          VERSION: ${{ github.event.inputs.version }}
        with:
          script: |
            const issuesList = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 20,
            });
            const releaseTitle = `Release v${process.env.VERSION}`;
            const found = issuesList.data.find(i => i.title === releaseTitle);
            if (!found) throw new Error(`No open issue with title "${releaseTitle}"`);
            core.setOutput("issue_number", found.number);

      - name: Comment on GitHub Issue
        uses: actions/github-script@v7
        env:
          VERSION: ${{ github.event.inputs.version }}
        with:
          script: |
            const issueNumber = Number(core.getInput('issue_number'));
            const today = new Date().toISOString().slice(0,10);
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `Deploy @${github.context.actor} от ${today}.\nОбраз: \`${process.env.IMAGE}\``
            });
